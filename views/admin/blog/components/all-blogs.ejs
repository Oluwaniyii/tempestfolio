<div class="row">
    <div class="col-lg-12">
        <div class="main-card mb-3 card all-blogs-container" id="blog-card">
            <div class="card-header" style="border: none;">
                <div>
                    <h5 class="card-title">All Blogs</h5>
                </div>
                <div class="entries">
                    <span style="font-weight: 400;text-transform: capitalize;">
                        Entries
                    </span>
                    <select name="" id="entries" onchange="loadPage()">
                        <option value="5">5</option>
                        <option value="7">7</option>
                        <option value="10">10</option>
                        <option value="12">12</option>
                    </select>
                </div>
                <!-- Entries -->
                <!-- Entries -->
            </div>
            <div class="card-body" style="min-height: 290px !important;">
                <table class="mb-0 table table-striped no-border" style="border: none;">
                    <thead style="font-size: 15px">
                        <tr>
                            <th>
                                <i class="fa fa-edit" aria-hidden="true" title="Blog Title"></i>
                            </th>
                            <th>
                                <i class="fa fa-calendar-alt" aria-hidden="true" title="Blog Date"></i>
                            </th>
                            <th>
                                 <i class="fa fa-eye" aria-hidden="true" title="View Blog"></i>
                            </th>
                            <th>
                                <i class="fa fa-globe" aria-hidden="true" title="View blog in external url"></i>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="blogsHolder" style="font-size: 13px;"></tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Pagination Start-->
    <div class="col-lg-12">
        <nav class="" aria-label="Page navigation example">
            <ul class="pagination" id="pagination"></ul>
        </nav>
    </div>
    <!-- Pagination End-->
    <div style="display: block; height: 100px"></div>
</div>

<!-- Component Based Javascript -->
<script>
function loadPage(index){
    const blogCard = document.getElementById('blog-card');
    const blogsHolder = document.getElementById('blogsHolder');
    const blogsContainer = document.querySelector('.all-blogs-container');
    const entries = document.getElementById("entries").value || 5;
    let pageIndex = index || 1 ;

    blogsHolder.innerHTML = "";

    // blogsContainer Height to fit
    let blogsContainerHeight = "";
           switch (entries) {
               case "7" :
                  blogsContainerHeight = "415px";
               break;
               case "10" :
                  blogsContainerHeight = "527px";
               break;
               case "12" :
                  blogsContainerHeight = "601px";
               break;
               default :
                  blogsContainerHeight = "343px";
           }

    blogsContainer.style.minHeight = blogsContainerHeight;
    let blogsHolderParent = blogsHolder.parentElement;

    const url = `/api/blog/?entries=${entries}&index=${pageIndex}`;
    const xhr  =  new XMLHttpRequest();
    xhr.open("GET", url);
    xhr.send();

    xhr.onload = function(){
        if(this.status > 399){
            blogsHolderParent.innerHTML = `<p>
                Could Not Load Data at the moment
                Please check your connection and reload your browser
                </p>`

                return;
        }

        const response =  JSON.parse(this.responseText);
        let data = response.data;
        let blogs = data.chunk;

        if(blogs.length){
            paginate(data)
            blogs.forEach(blog => {
                blogsHolder.innerHTML += renderBlogRow(blog);
        });
            loadBlog(blogs[0]._id);
        }
        else {
            blogCard.innerHTML = "<h4 style='padding: 10px'>You have no bogs yet</h4>"
        }
    }
}

function renderBlogRow(blog){
    const blogRow = ` <tr key="${blog._id}">
                <td>
                    <span style="font-weight: 600;">
                          ${blog.title}
                    </span>
                    </td>
                <td>
                    <span style="font-weight: 400;">
                          ${blog.date}
                    </span>
                 </td>
                <td>
                    <span role="button" class="pointer text-primary" onclick="loadBlog('${blog._id}')" title="View ${blog.title}">
                        <i class="fa fa-fw" aria-hidden="true"></i>
                    </span>
                </td>
                <td>
                    <a class="text-secondary" href="${blog.link}" target="_blank">
                        <i class="fa fa-fw" aria-hidden="true" title="visit blog site"></i>
                    </a>
                 </td>
                 </tr>
    `
    return blogRow;
}

function paginate(data){
    let {entries, count, page} = data;
    const pages = Math.ceil(count/entries);

    const pagination = document.getElementById("pagination");
    const pageNextButton = `   <li class="page-item">
                    <span
                        role="button"
                        class="page-link page-link-next"
                        aria-label="Next"
                        id="pageNext"
                        onclick="getNextPage()"
                        style="background: #ffffff52;"
                        >
                        <span aria-hidden="true">»</span>
                        <span class="sr-only">Next</span>
                        </span>
                </li>`
    const pagePrevButton = `  <li class="page-item">
                    <span
                        role="button"
                        class="page-link  page-link-prev"
                        aria-label="Prev"
                        id="pagePrev"
                        onclick="getPrevPage()"
                        style="background: #ffffff52;"

                   >
                        <span aria-hidden="true">«</span>
                        <span class="sr-only">Previous</span>
                    </span>
                </li>`
        
        pagination.innerHTML = ""
        pagination.innerHTML += pagePrevButton;

        let i = 1;
        for(; i<=pages;){
                let active = (i === page) ? true : false ;
                let isFirst = i === 1 ? "page-link-page-first" : "";
                let isLast = i === pages ? "page-link-page-last" : "";
    
                pagination.innerHTML += `<li class="page-item ${active ? "active" : "" }">
                    <span role="button" class="page-link page-link-page ${active ? "active" : "" } ${isFirst} ${isLast}" pageindex="${i}"  active="${active}" onclick="loadPage(${i})" >${i}</a>
                </li>`;

            i++
        }
          
        pagination.innerHTML += pageNextButton;
}

function getPrevPage(){
    const pageLinks = document.querySelectorAll(".page-item .page-link-page");
    const pageLinkFirst = document.querySelector(".page-item .page-link-page-first").getAttribute("pageindex");
    
    pageLinks.forEach(pageLink=>{
        let active = pageLink.getAttribute("active");
        let pageIndex = parseInt(pageLink.getAttribute("pageindex"));

        if (active ===  'true'){
            let newPageIndex = pageIndex - 1;
            if( newPageIndex < parseInt(pageLinkFirst) ) return ;
            loadPage(newPageIndex);
            return;
        }
    })
    return;
}

function getNextPage(){
    const pageLinks = document.querySelectorAll(".page-item .page-link-page");
    const pageLinkLast = document.querySelector(".page-item .page-link-page-last").getAttribute("pageindex");
    
    pageLinks.forEach(pageLink=>{
        let active = pageLink.getAttribute("active");
        let pageIndex = parseInt(pageLink.getAttribute("pageindex"));

        if (active ===  'true'){
            let newPageIndex = pageIndex + 1;
            if( newPageIndex > parseInt(pageLinkLast) ) return ;
            loadPage(newPageIndex);
            return;
        }
    })
    return;
}


loadPage();

</script>